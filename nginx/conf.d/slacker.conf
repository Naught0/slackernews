# This is a sample Nginx configuration file.
# It's intended to be placed in the `/etc/nginx/sites-available/` directory
# and then symlinked to `/etc/nginx/sites-enabled/`.

# The 'server' block defines a virtual server to handle incoming requests.
server {
    # 'location /' matches all incoming requests for the root path.
    # This location block will not require a password.
    listen 80;
    listen [::]:80;

    location = / {
        proxy_pass http://app:3000/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }
    
    # This location block matches all other incoming requests.
    # The `auth_basic` and `auth_basic_user_file` directives are added here
    # to protect all routes except the root (`/`) route.
    location / {
        # 'auth_basic' enables HTTP Basic Authentication and sets the prompt message.
        auth_basic "Sorry, AI bots are DDoSing me and I can't rely on mitigations other than this.";

        # 'auth_basic_user_file' specifies the path to the password file.
        # You'll need to create this file using the `htpasswd` utility.
        # For example: `htpasswd -c /etc/nginx/.htpasswd myuser`
        auth_basic_user_file /etc/nginx/.htpasswd;

        # 'proxy_pass' forwards the authenticated requests to the backend server.
        proxy_pass http://app:3000/;

        # Standard proxy headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
    }
}

